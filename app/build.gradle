apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ", TimeZone.getTimeZone("UTC"))
def gitVersionCode = 'git rev-list --count HEAD'.execute([], project.rootDir).text.trim().toInteger();
def gitBranchName = 'git symbolic-ref -q --short HEAD'.execute([], project.rootDir).text.trim();

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

// set Geocaching API staging key and secret if production key and secret is not set
// Note: Staging server is slow and not for production use!!!!
if (!project.hasProperty('geocachingApiKey')) {
    ext.geocachingApiKey = '9C7552E1-3C04-4D04-A395-230D8931E494'
}
if (!project.hasProperty('geocachingApiSecret')) {
    ext.geocachingApiSecret = 'DA7CC147-7B5B-4423-BCB4-D0C03E2BF685'
}
if (!project.hasProperty('geocachingApiStaging')) {
    ext.geocachingApiStaging = true
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        applicationId "com.arcao.trackables"
        minSdkVersion 16
        targetSdkVersion 22
        versionName "1.0"

        versionCode gitVersionCode
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "GEOCACHING_API_KEY", "\"${geocachingApiKey}\""
        buildConfigField "String", "GEOCACHING_API_SECRET", "\"${geocachingApiSecret}\""
        buildConfigField "boolean", "GEOCACHING_API_STAGING", "${geocachingApiStaging}"
    }
    buildTypes {
        debug {
            versionNameSuffix "-${gitBranchName}"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-butterknife.pro'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:cardview-v7:21.0.3'
    compile 'com.android.support:recyclerview-v7:21.0.3'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile('com.mikepenz.materialdrawer:library:2.7.0@aar') {
        transitive = true
    }
    compile 'com.mikepenz.iconics:octicons-typeface:2.2.0@aar'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.3.0'

    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'javax.annotation:jsr250-api:1.0'

    compile 'org.slf4j:log4j-over-slf4j:1.7.7'
    compile 'com.arcao:slf4j-timber:1.5'

    // from maven.arcao.com repository
    compile('com.arcao:geocaching-api:1.6.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12' // Not working in Android, slf4j-timber used instead
    }

    compile 'org.apache.commons:commons-lang3:3.2'
    compile 'commons-io:commons-io:2.4'
    compile('org.scribe:scribe:1.3.7') {
        exclude group: 'commons-codec', module: 'commons-codec' // already in Android
    }

    // from JCenter repository
    compile 'com.afollestad:material-dialogs:0.6.7.1'
}
